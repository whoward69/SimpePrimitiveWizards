Adding a new wizard
===================
In the SimpePrimitiveWizards_73_44-QA project
Add a new folder of the primitives number (eg 0x0007)
Copy the two files from the donor wizard (eg BhavOperandWiz0x0012.cs and BhavOperandWiz0x0012.UI.cs)
And paste them into the new wizard folder
Rename them, but do not rename all references to the code element (that is, select No to any dialogs)
In the BhavOperandWiz0x0007.cs file, update the primitive number (4 occurances) and the primitive name in the comment
In the BhavOperandWiz0x0007.UI.Designer.cs file, update the primitive number (1 occurance)
In the BhavOperandWiz0x0007.UI.cs file, update the primitive number (3 occurances - one in a hyperlink, make sure it's to the correct site!) and the primitive name in the comment
Use AgentRansack over C:\Users\whowa\Documents\Visual Studio 2022\Projects\SimpePrimitiveWizards\SimpePrimitiveWizards_73_44-QA\0x0007 to check there are no occurances of the old primitive number (eg 0x0012)
Copy the 0x0007 folder and PASTE AS LINK into the other two projects
Update the three .il files and reassemble the pjse.coder DLLs
Change the wizard design and backing code as necessary
Clean and Build the solution
Test in three versions of SimPe


Layout
======
  General
    Width:			250, 400 or 440
	Height			As needed
    Minion:			Bottom Right, 32x32, 35 in from right edge, 35 up from bottom
    Attr Picker:	Bottom Right, next to Minion, 20 up from bottom, 282 for 440 width
    Decimal:		Bottom Right, next to Attr Picker, 20 up from bottom, 136 for 440 width
  
  Data Owner Panel
    Width:			Same as main panel
    Height:			21
    comboDataOwner 	200x21	@100,0
    comboDataPicker	120x21	@310,0
    textDataValue	120x20	@310,0
  
  Labels
    Text Align		Top Right
	First Label		@7 down



Code Checks
===========
For these the boolset and operand numbers should be the same
------------------------------------------------------------
Boolset boolset\d+ = new Boolset\((operands|reserved1)\[OperandConstants.Operand\d+\]\);
OperandConstants.Operand\d+\] = boolset\d+;

All of these should return nothing
----------------------------------
^using (simpe|pjse);
(operands|reserved1)\[[0-9]
operands\[OperandConstants.Operand(8|9|10|11|12|13|14|15)\]
reserved1\[OperandConstants.Operand[0-7]\]
SelectedItem =


Editing pjse.coder.plugin.dll
=============================

Notes
-----
1) The pjse.coder.plugin.dll is in the Plugins sub-directory
2) As all classes for a namespace MUST be in the same assembly (.dll) file, it is NOT possible to use the "pjse.BhavOperandWizards" namespace


Actions
-------
1) BACK IT UP!!!

2) De-compile it with Microsoft Visual Studio disassembler (from a cmd window run as administrator)

c:
cd "\Users\whowa\Documents\Visual Studio 2022\Projects\SimpePrimitiveWizards\SimPe_0_72_01\PjseCoderPlugin"
"C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\Bin\ildasm.exe" pjse.coder.plugin.dll_ORIGINAL /OUT=pjse.coder.plugin.il

c:
cd "\Users\whowa\Documents\Visual Studio 2022\Projects\SimpePrimitiveWizards\SimPe_0_73_44-QA\PjseCoderPlugin"
"C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\Bin\ildasm.exe" pjse.coder.plugin.dll_ORIGINAL /OUT=pjse.coder.plugin.il

c:
cd "\Users\whowa\Documents\Visual Studio 2022\Projects\SimpePrimitiveWizards\SimPe_0_77_69\PjseCoder"
"C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\Bin\ildasm.exe" pjse.coder.dll_ORIGINAL /OUT=pjse.coder.il


3) At the very top of the pjse.coder.plugin.il file, add a reference to the new whse.primitivewizards.dll

.assembly extern mscorlib
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
  .ver 2:0:0:0
}
.assembly extern whse.primitivewizards
{
  .ver 1:0:0:0
}
.assembly extern simpe.helper
{
  .ver 0:73:44:37511
}

4) Search for the "WizPrim" class you want to add a wizard to, eg WizPrim0x002a

5) Insert the code to implement the virtual Wizard() method

  } // end of method WizPrim0x002a::.ctor

  .method public hidebysig virtual instance class pjse.ABhavOperandWiz 
          Wizard() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class SimPe.PackedFiles.Wrapper.Instruction pjse.BhavWiz::instruction
    IL_0006:  newobj     instance void [whse.primitivewizards]whse.PrimitiveWizards.BhavOperandWiz0x002a::.ctor(class SimPe.PackedFiles.Wrapper.Instruction)
    IL_000b:  ret
  } // end of method WizPrim0x002a::Wizard

  .method family hidebysig virtual instance string 
          Operands(bool lng) cil managed

6) Save the edits

7) Re-compile it with Microsoft Visual Studio assembler (from a cmd window run as administrator)

c:
cd "\Users\whowa\Documents\Visual Studio 2022\Projects\SimpePrimitiveWizards\SimPe_0_72_01\PjseCoderPlugin"
"C:\Windows\Microsoft.NET\Framework\v2.0.50727\ilasm.exe" pjse.coder.plugin.il /RESOURCE=pjse.coder.plugin.res /DLL

c:
cd "\Users\whowa\Documents\Visual Studio 2022\Projects\SimpePrimitiveWizards\SimPe_0_73_44-QA\PjseCoderPlugin"
"C:\Windows\Microsoft.NET\Framework\v2.0.50727\ilasm.exe" pjse.coder.plugin.il /RESOURCE=pjse.coder.plugin.res /DLL

c:
cd "\Users\whowa\Documents\Visual Studio 2022\Projects\SimpePrimitiveWizards\SimPe_0_77_69\PjseCoder"
"C:\Windows\Microsoft.NET\Framework\v2.0.50727\ilasm.exe" pjse.coder.il /RESOURCE=pjse.coder.res /DLL

8) Copy the whse.primitivewizards.dll into the Plugins sub-directory


Creating a New Primitive Wizard
===============================

Must NOT use the "pjse.BhavOperandWizards" namespace!

In the SimpePrimitiveWizards project
Add a folder for the primitive
Within that folder create the BhavOperandWiz class, eg

using SimPe.PackedFiles.Wrapper;
using whse.PrimitiveWizards.Wiz0x002a;

namespace whse.PrimitiveWizards
{
    public class BhavOperandWiz0x002a : pjse.ABhavOperandWiz
    {
        public BhavOperandWiz0x002a(Instruction i) : base(i)
        {
            this.myForm = new UI();
        }

        public override void Dispose()
        {
            if (this.myForm != null)
            {
                // Clean up as necessary

                this.myForm = null;
            }
        }
    }
}

And create the associate UI class


CHANGE
======
   IL_0042:  switch     ( 
                          IL_0051,
                          IL_007e)
    IL_004f:  br.s       IL_00a0
	
TO
==

   IL_0042:  switch     ( 
                          IL_0051,
                          IL_00a0)
    IL_004f:  br.s       IL_007e
	

To fix the mistake with the Reach / Put primitive's action (op10) description

